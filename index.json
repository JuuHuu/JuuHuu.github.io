
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Jun Hu is a Ph.D student of Robotics at USTC. His research interests include distributed robotics, artifical intelligence and programmable matter.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Jun Hu is a Ph.D student of Robotics at USTC. His research interests include distributed robotics, artifical intelligence and programmable matter.","tags":null,"title":"Jun Hu","type":"authors"},{"authors":[],"categories":[],"content":"Introduction Hugo academic theme does not contain TOC, which is essential when viewing long articles. This article provide a simple method to add TOC in Hugo academic theme posts.\nMethod Modify the single.html. The single.html usually under ’layouts/_default’ fold. Using search app can find it easily. Using following codes to replace the origial contants: {{- define \u0026#34;main\u0026#34; -}} {{ if .Params.toc }} \u0026lt;div class=\u0026#34;container-fluid docs\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row flex-xl-nowrap\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;d-none d-xl-block col-xl-2 docs-toc\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;nav toc-top\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; id=\u0026#34;back_to_top\u0026#34; class=\u0026#34;docs-toc-title\u0026#34;\u0026gt;{{ i18n \u0026#34;on_this_page\u0026#34; }}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; {{ .TableOfContents }} {{ partial \u0026#34;docs_toc_foot\u0026#34; . }} \u0026lt;/div\u0026gt; \u0026lt;main class=\u0026#34;col-12 col-md-0 col-xl-10 py-md-3 pl-md-5 docs-content\u0026#34; role=\u0026#34;main\u0026#34;\u0026gt; {{ end }} \u0026lt;article class=\u0026#34;article\u0026#34;\u0026gt; {{ partial \u0026#34;page_header\u0026#34; . }} \u0026lt;div class=\u0026#34;article-container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;article-style\u0026#34;\u0026gt; {{ .Content }} \u0026lt;/div\u0026gt; {{ partial \u0026#34;page_footer\u0026#34; . }} \u0026lt;/div\u0026gt; \u0026lt;/article\u0026gt; {{ if .Params.toc }} \u0026lt;/main\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{- end -}} Preview your website using : hugo server In my case, an error occured: partial \u0026#34;docs_toc_foot\u0026#34; not found.\nIf you have the same problem, add an empty file naming docs_toc_foot.html to path:layouts/partials.\nChanging your .md file: Adding a config in you .md file: toc: true On your article right hand side, there should be a table of contants: Config your TOC (Optional) Add following contant in your config.yaml file can changt TOC style:\nmarkup: tableOfContents: startLevel: 2 endLevel: 5 ordered: false Where startLevel and endLevel indicate the start and end level of TOC, ordered control whether show index number before TOC (ordered seems dosen’t work in my website).\nReference https://github.com/HugoBlox/hugo-blox-builder/issues/1520#issuecomment-601982609 ","date":1712682305,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712682305,"objectID":"285046ede14c9b21a915fd3fcac52915","permalink":"https://juuhuu.github.io/post/add_toc/","publishdate":"2024-04-10T01:05:05+08:00","relpermalink":"/post/add_toc/","section":"post","summary":"this article provides way to add TOC to hugo academic theme post","tags":["hugo","website","Robotics","Path Planning"],"title":"Adding TOC","type":"post"},{"authors":[],"categories":[],"content":"Introduction A* was first proposed to plan a mobile robot actions, but it has been shown applicable to any problem that satisfying the conditions of a cost algebra.This article introduced A* and implemented using MATLAB.\nGraph The graph search algorithm (of course including A* algorithm) takes a graph as input. The graph consists of some “nodes” and “edges” that connect the nodes, as illustrated in Figure 1.\nFigure 1. Graph, where nodes with blue outline represents start, with red represents goals, numbers around nodes represents\nFor example, when planning robotics motion, the nodes represent locations that a robotics can reach, edges represent possible path a robot can move from one nodes to others. While doing motion plan, the nodes represent possible joint configuration, and edges represent possible transfer path between joints’ configuration.\nAlgorithms After representing the problem using Graph, the next step is to implement search. There are lots of algorithms run on graphs, here we will explore three of them: Breadth First Search, Dijkstra’s Algorithm, and A*.\nBreadth First Search Breadth First Search algorithm explores equally in all directions, Which means the cost (weight) of edges are all equal. The key ideal for Breadth First Search algorithm is to maintain a ‘frontier’ variable that record the most front nodes.\nThe peudocode is shown below:\nInitial parameters Add starting nodes to frontier repeat following until frontier is empty Move the first element of frontier to current node Find the neighbors of current node If neighbors is not in reached add neighbors to reached add neighbors to the end of frontier end repeat The MATLAB code is shown below.\n%step 1,2 frontier={};% define the frontier nodes frontier{end+1}=star_node; % initial the start nodes as the first frontier reached=[]; % define reached nodes %step 3 while ~isempty(frontier) %step 4 current = frontier{1}; % add the first elements of frontier to current frontier(1)=[]; % remove the first elements of frontier %plot the current nodes and denoted as green. plotnodes(current,nodes_positions); %step 5 %find the neighbors of current nodes next_node=neighbors(G,current); %step 6 for i =1:length(next_node) if ~ ismember(next_node(i),reached) % if neighbor nodes is not in the reached set frontier{end+1}=next_node(i); % add neighbor nodes to frontier reached=unique([next_node(i),reached]); % add neighbor nodes to reached end end input(\u0026#39;Press any key to continue...\\n\u0026#39;); % waiting user\u0026#39;s action, to show each explore step end An animation showing the explore steps is shown below. Green nodes represent reached node. You can see all nodes gradually been explored.\nYour browser does not support the video tag. However, we can only visit all the node in graph. NO path information is provided till now. We can modify the loop by replace the reached to a dictionary came_from, where the key are previous reached and value are where the key came from.\nThe peudocode is shown below:\nInitial parameters Add starting nodes to frontier repeat following until frontier is empty Move the first element of frontier to current node Find the neighbors of current node If neighbors is not in came_from fame_from[neighbors]=current add neighbors to the end of frontier end repeat The Matlab code is shown below\n% clear previous variables clear; % %initial random graphs % n=40; % nodes numbe % e=1.1*n; % edges number % G = graph(true(n), \u0026#39;omitselfloops\u0026#39;); % p=randperm(numedges(G),e); % G=graph(G.Edges(p,:)); % % %initial node positions % nodePositions=randi(100,n,2); % distance=nodePositions(:,1).^2+nodePositions(:,2).^2; % [~,sortIndex]=sort(distance); % nodePositions=nodePositions(sortIndex,sortIndex); % % %plot graphs % figure; % plot(G,\u0026#39;XData\u0026#39;, nodePositions(:,1), \u0026#39;YData\u0026#39;, nodePositions(:,2), \u0026#39;NodeLabel\u0026#39;, 1:n); % hold on; % % % Highlight the start node (assuming startNode is the ID of the start node) % plot(nodePositions(1,1), nodePositions(1,2), \u0026#39;go\u0026#39;, \u0026#39;MarkerSize\u0026#39;, 10, \u0026#39;LineWidth\u0026#39;, 2); % % % Highlight the goal node (assuming goalNode is the ID of the goal node) % plot(nodePositions(n,1), nodePositions(n,2), \u0026#39;ro\u0026#39;, \u0026#39;MarkerSize\u0026#39;, 10, \u0026#39;LineWidth\u0026#39;, 2); % % hold off; %---- Initial graphs ------- %preset node positions nodes_positions=[-0.5\t-0.5 -0.09\t-0.4 -0.285\t-0.305 0.0575\t-0.225 -0.0525\t-0.0175 -0.37\t0.3 0.3525\t-0.0525 0.0625\t0.255 -0.1\t0.3725 0.4275\t0.195 0.345\t0.3525 0.5\t0.5 ]; % preset edges and costs edges=[12\t11\t0.214 12\t10\t0.3135 12\t8\t0.5014 11\t10\t0.1778 11\t9\t0.4454 10\t7\t0.2586 9\t8\t0.2005 9\t6\t0.2796 9\t5\t0.5994 8\t4\t0.48 5\t2\t0.179 4\t3\t0.3517 4\t2\t0.2289 3\t2\t0.2169 3\t1\t0.2903 2\t1\t0.422 7\t5\t0.4402 5\t4\t0.11 ]; G=graph(edges(:,1),edges(:,2),edges(:,3)); %the Graph % suppossing starting node is 1, goal node is 12 star_node =1; goal_node= 12; %^^^^^^^^^^^ Initial graphs ^^^^^^^^ %-----------plot the graph------------ % plot the graph …","date":1712563085,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712563085,"objectID":"e9f2111f4cf00f0c01bd1dfc809f12c7","permalink":"https://juuhuu.github.io/post/astar/","publishdate":"2024-04-08T15:58:05+08:00","relpermalink":"/post/astar/","section":"post","summary":"this article provide an A* code  implemented by MATLAB","tags":["MATLAB","Algorithm","Robotics","Path Planning"],"title":"A* Algorithm Using MATLAB","type":"post"},{"authors":[],"categories":[],"content":"Hugo is a framework to generate statics website, and Github is to publish the website. This article demonstrates using Hugo and GitHub to setup a personal website. It’s easy to maintain and clear to read.\nPreparing Create a repository on GitHub We can upload our website to various servers though, I use GitHub to hold my personal website since it’s free. Creating a repository for personal website is slightly different from normal repository. The name for a personal website’s repository should be the same with your github name, and every one can have only one such repository. Building detail can be found on GitHub website.\nInstalling Hugo Installing Hugo is very easy on Windows platform. All you have to do is download a binary .exe file and add the file path to system variable. Installation detail can be found on hugo official website.\nChoosing a Hugo theme Upon finishing install hugo, you can chooses a theme to generate your website. The theme market can be found here. And installing process usually listed in the introduction part of the theme.\nCompile and preview Follow the theme introduction to config your website, you should already preview your website on your computer. The next step is to publish the site to GitHub. Before doing that, here are some tips:\nPreview your website using command:\nhugo server Generate the website file using:\nhugo The website file will be generated in \\public by default. For convenient, you can change it to other path by adding following line to config.yaml or hugo.toml file under hugo root space.\nAdding to config.yaml file:\npublishDir: \u0026#34;your path\u0026#34; Pushing the website to GitHub Using git or other GUI app, publishing the website file to repository you created.\nPosting the blog Posting blogs to our website needs three steps: creating, compiling and publishing.\nCreating: creating a .md file and write some content on your computer. Creating steps using following command:\nhugo new [your_post_path\\your_file.md] for example:\nhugo new .\\content\\post\\UsingHugo\\using_hugo.md the above command is that I used to write this blog.\nThen using yor editor to write contents on the .md file. Yo can also preview the file using hugo server command.\nAttention that you have to set “draft” at the top of your .md file to false. Otherwise, You will not be able to preview the blog.\nCompiling: compile the web file Noting that all you have done is on your computer. You have to compile the website for publishing. Compiling the website using hugo command.\nPublishing: publishing the website to Github Using your way to publish the website to GitHub, then everyone can see your web.\n","date":1712339324,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712339324,"objectID":"b56feda1ba9c53c596965376f8584792","permalink":"https://juuhuu.github.io/post/usinghugo/","publishdate":"2024-04-06T01:48:44+08:00","relpermalink":"/post/usinghugo/","section":"post","summary":"Hugo is a framework to generate statics website, and Github is to publish the website. This article demonstrates using Hugo and GitHub to setup a personal website. It’s easy to maintain and clear to read.","tags":["Hugo","Website"],"title":"Personal Web Using Hugo","type":"post"},{"authors":["Jun Hu","Youjiang Liu","Jiao Jin","Han Wang","Shan Li","Chilai Chen"],"categories":null,"content":"","date":1712275200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712275200,"objectID":"866605c40c501df096a46f43fa30fbb0","permalink":"https://juuhuu.github.io/publication/theoretical_and/thero/","publishdate":"2024-04-06T00:00:00Z","relpermalink":"/publication/theoretical_and/thero/","section":"publication","summary":"High-Field Asymmetric Ion Mobility Spectrometry (FAIMS) is a technique for ion separation and detection based on ion mobility variation under high electronic field. While compensation voltage scanning speed is a fundamental parameter in FAIMS, its impact on spectra remains unclear. In this work, a function referred to as F-EMG is introduced to describe the impact of compensation voltage scanning speed on FAIMS spectra, and the properties of the function are studied. Theoretical analysis emphasizes the impact of the scanning speed on peak height, position, and symmetry, as well as the capability of the F-EMG function to progressively approach Gaussian function at lower scanning speeds. Furthermore, the function indicates that spectra obtained in positive and negative scanning modes exhibits symmetry. An experimental validation, conducted with a custom FAIMS setup and analyzing hydrogen sulfide, ethylbenzene, toluene, styrene, benzene and ammonia, confirms the model's influence on peak features, fitting accuracy, and exhibits a closer alignment with the Gaussian function at lower scanning speeds. Additionally, the experimental data indicate that the spectra show symmetry in positive and negative scanning models. This work not only improves understanding of FAIMS spectral analysis but also introduces a robust method for enhancing data accuracy across varying scanning speeds.","tags":["FAIMS"],"title":"Theoretical and Experimental Study on the Effect of Scanning Speed on Faims Peaks","type":"publication"},{"authors":["Jun Hu","Youjiang Liu","Shaomin Liu","Shan Li","Han Wang","Chilai Chen"],"categories":null,"content":"","date":1696118400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1696118400,"objectID":"cc581f4fb9c09cff67588bd96fbeb067","permalink":"https://juuhuu.github.io/publication/faims_peak/peak/","publishdate":"2023-10-01T00:00:00Z","relpermalink":"/publication/faims_peak/peak/","section":"publication","summary":"High-field asymmetric waveform ion mobility spectrometry (FAIMS) enables precise identification of substances through fingerprint spectra obtained by multi-cycle scans at different separation voltages (DV) and nonlinear functions. To improve the scan speed of compensating voltage (CV) in multi-cycle scanning, the challenge arises in peak position shifts. This article proposes a method to accurately determine peak positions regardless of scan speed by exploiting the symmetric features of spectra obtained through positive and negative CV scans. The proposed method enables extremely fast scan speeds. A custom-built FAIMS system was used to verify the correlation between peak shifts and scan speed, the symmetry of spectra peaks under positive and negative CV scan modes, and the peak positions and solution errors of nonlinear functions by using benzene, styrene, acetone, toluene, m-xylene, and hydrogen sulfide as experimental samples. The results demonstrate the widespread occurrence of peak shifts, with peak deviations reaching as high as 2.49% even in slow scans of 0.75 V/s. As scan speed increases, peak position deviations gradually increase, with the maximum deviation reaching 46.83% at a scan speed of 30 V/s. By applying the proposed averaging method, peak positions of the six substances were obtained within the scan speed range of 30 to 0.75 V/s. Compared to traditional methods, the maximum peak position error using the averaging method was reduced by approximately 87.5%, and the spectrum acquisition time was reduced by 85%. The use of the averaging method reduced the calculation error of the alpha function by 88% and decreased the acquisition time by 80%. The research findings of this study offer a solution for the accurate determination of peak positions in FAIMS under fast scanning.","tags":["FAIMS"],"title":"Rapid method for accurate peak position extraction in high-field asymmetric ion mobility spectrometry","type":"publication"}]